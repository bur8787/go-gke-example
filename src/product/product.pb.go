// Code generated by protoc-gen-go. DO NOT EDIT.
// source: product.proto

package product

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type ProductRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ProductRequest) Reset()         { *m = ProductRequest{} }
func (m *ProductRequest) String() string { return proto.CompactTextString(m) }
func (*ProductRequest) ProtoMessage()    {}
func (*ProductRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_product_e3dc94c8e0aef22c, []int{0}
}
func (m *ProductRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProductRequest.Unmarshal(m, b)
}
func (m *ProductRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProductRequest.Marshal(b, m, deterministic)
}
func (dst *ProductRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProductRequest.Merge(dst, src)
}
func (m *ProductRequest) XXX_Size() int {
	return xxx_messageInfo_ProductRequest.Size(m)
}
func (m *ProductRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ProductRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ProductRequest proto.InternalMessageInfo

func (m *ProductRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type ProductReply struct {
	Message              string   `protobuf:"bytes,1,opt,name=message" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ProductReply) Reset()         { *m = ProductReply{} }
func (m *ProductReply) String() string { return proto.CompactTextString(m) }
func (*ProductReply) ProtoMessage()    {}
func (*ProductReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_product_e3dc94c8e0aef22c, []int{1}
}
func (m *ProductReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProductReply.Unmarshal(m, b)
}
func (m *ProductReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProductReply.Marshal(b, m, deterministic)
}
func (dst *ProductReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProductReply.Merge(dst, src)
}
func (m *ProductReply) XXX_Size() int {
	return xxx_messageInfo_ProductReply.Size(m)
}
func (m *ProductReply) XXX_DiscardUnknown() {
	xxx_messageInfo_ProductReply.DiscardUnknown(m)
}

var xxx_messageInfo_ProductReply proto.InternalMessageInfo

func (m *ProductReply) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func init() {
	proto.RegisterType((*ProductRequest)(nil), "ProductRequest")
	proto.RegisterType((*ProductReply)(nil), "ProductReply")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ProductClient is the client API for Product service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ProductClient interface {
	PostProduct(ctx context.Context, in *ProductRequest, opts ...grpc.CallOption) (*ProductReply, error)
}

type productClient struct {
	cc *grpc.ClientConn
}

func NewProductClient(cc *grpc.ClientConn) ProductClient {
	return &productClient{cc}
}

func (c *productClient) PostProduct(ctx context.Context, in *ProductRequest, opts ...grpc.CallOption) (*ProductReply, error) {
	out := new(ProductReply)
	err := c.cc.Invoke(ctx, "/Product/PostProduct", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ProductServer is the server API for Product service.
type ProductServer interface {
	PostProduct(context.Context, *ProductRequest) (*ProductReply, error)
}

func RegisterProductServer(s *grpc.Server, srv ProductServer) {
	s.RegisterService(&_Product_serviceDesc, srv)
}

func _Product_PostProduct_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ProductRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProductServer).PostProduct(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Product/PostProduct",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProductServer).PostProduct(ctx, req.(*ProductRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Product_serviceDesc = grpc.ServiceDesc{
	ServiceName: "Product",
	HandlerType: (*ProductServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "PostProduct",
			Handler:    _Product_PostProduct_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "product.proto",
}

func init() { proto.RegisterFile("product.proto", fileDescriptor_product_e3dc94c8e0aef22c) }

var fileDescriptor_product_e3dc94c8e0aef22c = []byte{
	// 125 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x2d, 0x28, 0xca, 0x4f,
	0x29, 0x4d, 0x2e, 0xd1, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x57, 0x52, 0xe1, 0xe2, 0x0b, 0x80, 0x08,
	0x04, 0xa5, 0x16, 0x96, 0xa6, 0x16, 0x97, 0x08, 0x09, 0x71, 0xb1, 0xe4, 0x25, 0xe6, 0xa6, 0x4a,
	0x30, 0x2a, 0x30, 0x6a, 0x70, 0x06, 0x81, 0xd9, 0x4a, 0x1a, 0x5c, 0x3c, 0x70, 0x55, 0x05, 0x39,
	0x95, 0x42, 0x12, 0x5c, 0xec, 0xb9, 0xa9, 0xc5, 0xc5, 0x89, 0xe9, 0x30, 0x65, 0x30, 0xae, 0x91,
	0x15, 0x17, 0x3b, 0x54, 0xa5, 0x90, 0x3e, 0x17, 0x77, 0x40, 0x7e, 0x71, 0x09, 0x8c, 0xcb, 0xaf,
	0x87, 0x6a, 0x91, 0x14, 0xaf, 0x1e, 0xb2, 0x99, 0x4a, 0x0c, 0x49, 0x6c, 0x60, 0x27, 0x19, 0x03,
	0x02, 0x00, 0x00, 0xff, 0xff, 0x1e, 0x59, 0x09, 0xe2, 0xa3, 0x00, 0x00, 0x00,
}
